
# NOTE: `embedding_size` and `prob_size` are external parameters

# NOTE: The following section will be embedded in `default_config.yml` in `tf-metric-learning` repo
#       and with the key: `evaluator`.

# TODO: Change name to `attribute_database`
# database: CSV (the only supported format)
database:
    database_type: #CSV
    database_config:
        path: misc/sample_features/attribute_table.csv

# index agent option: Numpy | HNSW
# TODO: taking care about importing lib not installed
index_agent: HNSW

# upper-bound of the evaluation instances
container_size: 100000

chosen_evaluations:
    - FacenetEvaluation
    - RankingEvaluation
    - ClassificationEvaluation

# Configurations for evaluator:
evaluation_options:
    # Implemented Evaluations
    FacenetEvaluation:
        sampling:
            # uniform | amount_weighted | amount_inverse_weighted
            class_sample_method: uniform
            instance_sample_method: uniform
            num_of_pairs: 1000
            ratio_of_positive_pair: 0.2

        metric:
            accuracy:            true
            validation_rate:     true
            false_accept_rate:   true
            true_positive_rate:  true
            false_positive_rate: true

        distance_measure:
            function:
                - euclidean
            threshold:
                start: 0.25
                end: 1.5
                step: 0.25
        attribute:
            group:
        option:

    ClassificationEvaluation:
        sampling:
            class_sample_method: uniform
            instance_sample_method: uniform
            num_of_sampled_class: all_class
            num_of_sampled_instance_per_class: all_instance
            maximum_of_sampled_data: 100000

        metric:
            top_k_hit_accuracy:
                - 1
                - 5

        distance_measure:

        attribute:
            group:
                - all
        option:

    RankingEvaluation:
        sampling:
            class_sample_method: uniform
            instance_sample_method: uniform
            num_of_db_instance_per_class: 10
            num_of_query_class: all_class
            num_of_query_instance_per_class: 1000 # TODO: all_instance
            maximum_of_sampled_data: 10000

        metric:
            top_k_hit_accuracy:
                - 1
                - 5
                - 10
            mAP: true

        distance_measure:
            function:
            threshold:

        # As a section of codes
        attribute: # developing
            # if `query` & `database` are not defined, sampling instead
            cross_reference:
                - query->database
            # e.g attribute_name `color` with values `red`, `blue` or 'yellow'.
            group:
                - all

        option:

# OPTIONS OF EACH ITEMS
